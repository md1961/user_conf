UserConf
========

ユーザごとの設定値をデータベースに保持する機能を追加するプラグイン
Rails 3 のみに対応


機能
====

クラス User に下記のインスタンス・メソッドを追加する。

  set_conf_value(name, value) -> nil
    name という名称で値 value を格納する。
    value は Marshal.dump が可能なオブジェクトであれば何でもよい。
    値が非nil値で、異なるクラスの値を上書きしようとすると TypeError が投げられる

  get_conf_value(name) -> Object
    name という名称を持つ値を返す。
    name という名称の使用を設定していなかった場合は NameError が投げられる

使用に先だって、下記メソッドを使って使用する名称を登録しておく必要がある。

  UserConfiguration.names=(names) -> nil
    String、または Symbol の配列を渡して、使用する名称を登録する

このメソッドを用いて、たとえば an_attribute という名称を登録すると、
UserConfiguration にゲッター an_attribute とセッター an_attribute= が定義される。
UserConfiguration#user=()、または UserConfiguration#user_id=() を用いて
User のインスタンスを設定しておけば上記ゲッター／セッターが使用できる。


準備
====

1. データベース・テーブル user_configurations を用意する

  下記のコマンドでマイグレーション・ファイルを生成。

    $ rails generate model UserConfigurationName
    $ rails generate model UserConfigurationValue

  内容をそれぞれ下記のようにする。

  ==> db/migrate/##############_create_user_configuraion_names.rb <==

    class CreateUserConfigurationNames < ActiveRecord::Migration
      def self.up
        create_table :user_configuration_names do |t|
          t.string :name , :null => false
          t.string :clazz, :null => false, :default => 'String'

          t.timestamps
        end

        add_index :user_configuration_names, :name, :unique => true
      end

      def self.down
        drop_table :user_configuration_names
      end
    end

  （:type はカラム名に使えないことに注意。上記では代わりに :clazz を
    使っている。:type を使うと ActiveRecord::Base#find() 系のメソッドの
    呼び出し時にエラーが発生する。）

  ==> db/migrate/##############_create_user_configuraion_values.rb <==

    class CreateUserConfigurationValues < ActiveRecord::Migration
      def self.up
        create_table :user_configuration_values do |t|
          t.references :user                   , :null => false
          t.references :user_configuration_name, :null => false
          t.string     :value

          t.timestamps
        end

        add_index :user_configuration_values, [:user_id, :user_configuration_name_id], :unique => true
      end

      def self.down
        drop_table :user_configuration_values
      end
    end

2. モデル User の設定をする

  class User に下記を追加する。

    include UserConfigurationValueAccessors


使用方法
========

(1)


スクリプトの一覧
================


トラブルシューティング
======================


ファイル
========

インストールされるファイルは以下のとおり。


Copyright (c) 2011 [Japan Petroleum Exploration co., ltd.], released under the MIT license

