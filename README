UserConf
========

ユーザごとの設定値をデータベースに保持する機能を追加するプラグイン
Rails 3 のみに対応


機能
====

- ？


準備
====

1. データベース・テーブル user_configurations を用意する

  下記のコマンドでマイグレーション・ファイルを生成。

    $ rails generate model UserConfigurationName
    $ rails generate model UserConfigurationValue

  内容をそれぞれ下記のようにする。

  ==> db/migrate/##############_create_user_configuraion_names.rb <==

    class CreateUserConfigurationNames < ActiveRecord::Migration
      def self.up
        create_table :user_configuration_names do |t|
          t.string :name , :null => false
          t.string :clazz, :null => false, :default => 'String'

          t.timestamps
        end

        add_index :user_configuration_names, :name, :unique => true
      end

      def self.down
        drop_table :user_configuration_names
      end
    end

  （:type はカラム名に使えないことに注意。上記では代わりに :clazz を
    使っている。:type を使うと ActiveRecord::Base#find() 系のメソッドの
    呼び出し時にエラーが発生する。）

  ==> db/migrate/##############_create_user_configuraion_values.rb <==

    class CreateUserConfigurationValues < ActiveRecord::Migration
      def self.up
        create_table :user_configuration_values do |t|
          t.references :user                   , :null => false
          t.references :user_configuration_name, :null => false
          t.string     :value

          t.timestamps
        end

        add_index :user_configuration_values, [:user_id, :user_configuration_name_id], :unique => true
      end

      def self.down
        drop_table :user_configuration_values
      end
    end

2. モデルの関連・バリデーションなどを設定する

  ==> app/models/user_configuration_name.rb <==

    class UserConfigurationName < ActiveRecord::Base
      has_many :user_configuration_values

      validates :name, :uniqueness => true
    end

  ==> app/models/user_configuration_value.rb <==

    class UserConfigurationValue < ActiveRecord::Base
      belongs_to :user
      belongs_to :user_configuration_name

      validates :user_configuration_name_id, :uniqueness => {:scope => :user_id}
    end

  ==> app/models/user.rb <==

    class User < UserAuthKuma::User
      has_many :user_configuration_values

      def get_conf_value(name)
        obj_value = user_configuration_values.detect { |value| value.user_configuration_name.name == name }
        return obj_value && obj_value.value
      end
    end


使用方法
========

(1)


スクリプトの一覧
================


トラブルシューティング
======================


ファイル
========

インストールされるファイルは以下のとおり。


Copyright (c) 2011 [Japan Petroleum Exploration co., ltd.], released under the MIT license

